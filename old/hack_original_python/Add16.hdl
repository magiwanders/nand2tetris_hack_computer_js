CHIP Add16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    HalfAdder(a=a[0], b=b[0], sum=out[0], carry=cab0);
    FullAdder(a=a[1], b=b[1], c=cab0, sum=out[1], carry=cab1);
    FullAdder(a=a[2], b=b[2], c=cab1, sum=out[2], carry=cab2);
    FullAdder(a=a[3], b=b[3], c=cab2, sum=out[3], carry=cab3);
    FullAdder(a=a[4], b=b[4], c=cab3, sum=out[4], carry=cab4);
    FullAdder(a=a[5], b=b[5], c=cab4, sum=out[5], carry=cab5);
    FullAdder(a=a[6], b=b[6], c=cab5, sum=out[6], carry=cab6);
    FullAdder(a=a[7], b=b[7], c=cab6, sum=out[7], carry=cab7);
    FullAdder(a=a[8], b=b[8], c=cab7, sum=out[8], carry=cab8);
    FullAdder(a=a[9], b=b[9], c=cab8, sum=out[9], carry=cab9);
    FullAdder(a=a[10], b=b[10], c=cab9, sum=out[10], carry=cab10);
    FullAdder(a=a[11], b=b[11], c=cab10, sum=out[11], carry=cab11);
    FullAdder(a=a[12], b=b[12], c=cab11, sum=out[12], carry=cab12);
    FullAdder(a=a[13], b=b[13], c=cab12, sum=out[13], carry=cab13);
    FullAdder(a=a[14], b=b[14], c=cab13, sum=out[14], carry=cab14);
    FullAdder(a=a[15], b=b[15], c=cab14, sum=out[15], carry=cab15);
} TEST {
|        a         |        b         |       out        || Passed | out[15] | out[14] | out[13] | out[12] | out[11] | out[10] | out[9] | out[8] | out[7] | out[6] | out[5] | out[4] | out[3] | out[2] | out[1] | out[0] | 
| 0000000000000000 | 0000000000000000 | 0000000000000000 ||   Y
| 0000000000000000 | 1111111111111111 | 1111111111111111 ||   Y
| 1111111111111111 | 1111111111111111 | 1111111111111110 ||   Y
| 1010101010101010 | 0101010101010101 | 1111111111111111 ||   Y
| 0011110011000011 | 0000111111110000 | 0100110010110011 ||   Y
| 0001001000110100 | 1001100001110110 | 1010101010101010 ||   Y
}